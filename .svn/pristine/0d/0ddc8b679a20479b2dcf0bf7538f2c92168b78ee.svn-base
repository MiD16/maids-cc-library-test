package com.template.Service.Table.AllIndexes;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.Base.Class.CActionHandler;
import com.Base.Class.CActionValidationParameters;
import com.Base.Class.CActionValidationResult;
import com.Base.Class.CResponse;
import com.template.Action.CActionConstant;
import com.template.Enum.EKeyCode;
import com.template.Exception.NoDataFoundException;
import com.template.Model.Table.AllIndexes.*;

import com.template.Repository.Table.AllIndexes.IndAddressTypeRepository;
import com.template.Repository.Table.AllIndexes.IndFileTypeRepository;
import com.template.Repository.Table.AllIndexes.IndGenderRepository;

import java.util.Date;
import java.util.List;
@Service
public class IndGenderServices {


@Autowired
IndGenderRepository indGenderRepository;
@Autowired CActionHandler actionHandler;

public CResponse createIndSignatureType(IndGender indGender) 
{
	CResponse response = null;
	CActionValidationParameters actionValidationParameters = null;
	CActionValidationResult actionValidationResult = null;
	
	do
	{
		response = new CResponse();
		actionValidationParameters = new CActionValidationParameters();
		
		actionValidationParameters.addParameter(EKeyCode.Ind_Gender.toString(), indGender);
		
		actionValidationResult = actionHandler.validate(CActionConstant.CREATE_IND_GENDER, actionValidationParameters);
		
		if(!actionValidationResult.isValid())
		{
			response.setSuccess(false);
			response.setErrorMessage(actionValidationResult.getErrorMessage());
			break;
		}
		
		indGender.setInsertBy(0);
		indGender.setIsDeleted(0);
		indGender.setInsertDate(new Date());
		indGenderRepository.save(indGender);
		
		response.setReturnedObject(indGender);
	}
	while(false);
	
	return response;
}

public IndGender updateSocialStatus(IndGender indGender) 
{
	CResponse response = null;
	CActionValidationParameters actionValidationParameters = null;
	CActionValidationResult actionValidationResult = null;
	
	response = new CResponse();
	actionValidationParameters = new CActionValidationParameters();
	actionValidationResult = new CActionValidationResult();
	
	if(indGender.getId() == null) 
	{
		
		indGender.setInsertBy(0);
	}
	
	
	
	else if(indGender.getId() != null)
	{
		IndGender temSocialStatus = indGenderRepository.findById(indGender.getId()).get();
		indGender.setInsertDate(temSocialStatus.getInsertDate());
	}
	indGenderRepository.save(indGender);
	return indGender;




}








public IndGender findByNames(String nameA, String nameB) {
	return indGenderRepository.findByNames(nameA, nameB);
}




public IndGender save(IndGender indGender) {
	if(indGender.getId() == null)
	{
		indGender.setInsertBy(0);
	}else if(indGender.getId() != null){
		IndGender temSignatureType=indGenderRepository.findById(indGender.getId()).get();
		indGender.setInsertDate(temSignatureType.getInsertDate());
	}
	indGenderRepository.save(indGender);
	return indGender;
}





public IndGender findById(Long id) {
	return indGenderRepository.getById(id);
}

public List<IndGender> getAll(){
	List<IndGender> all = indGenderRepository.getAll();
	return all;
}

public List<IndGender> getAllDeleted(){
	List<IndGender> allDeleted = indGenderRepository.getAllDeleted();
	return allDeleted;
}

public IndGender delete(Long id) {
	IndGender indFileType = indGenderRepository.findById(id).get();
	if (indFileType == null) {
		throw new NoDataFoundException("indSocialStatus With ID : " + id + " Not Found");
	}
	indFileType.setIsDeleted(1);
	return indGenderRepository.save(indFileType);
}

private static java.sql.Date getCurrentDate() {
	java.util.Date today = new java.util.Date();
	return new java.sql.Date(today.getTime());
}
}

