package com.template.Controller.Basic.SystemLog;


import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.Base.Class.CResponse;
import com.Base.DTO.CResponseDTO;
import com.template.Class.Pageing.PageInfo;
import com.template.Model.Basic.SystemLog.ModifyLog;
import com.template.Service.Basic.SystemLog.ModifyLogService;

@Controller
@RequestMapping("ModifyLog")
public class ModifyLogController {
	
	@Value("${page.size}")
	int itemCountInPage;

	@Autowired
	ModifyLogService modifyLogService;

	@GetMapping("/index")
	public String index(Model model, final RedirectAttributes redirectAttributes,
			@RequestParam(name = "page", required = false) Integer page) {
		String result;
		CResponse response = new CResponse();
		if (page == null)
			page = 0;
		response = modifyLogService.getAllModifyLog(PageRequest.of(page, itemCountInPage));
		Page<ModifyLog> sysPage = (Page<ModifyLog>) response.getReturnedObject();
		model.addAttribute("sysPage", sysPage.getContent());
		model.addAttribute("pageInfo", PageInfo.getPageInfo(sysPage));
		result = "/SystemLog/indexModifyLog";
		return result;
	}

	@GetMapping("/create")
	public String create(@RequestParam(value = "id", required = false) Long id, Model model,
			final RedirectAttributes redirectAttributes) {
		String result;
		CResponse response = null;
		ModifyLog modifyLog;
		if (id == null) {
			modifyLog = new ModifyLog();
		} else {
			response = new CResponse();
			response = modifyLogService.findById(id);
			modifyLog = (ModifyLog) response.getReturnedObject();
			model.addAttribute("modifyLog", modifyLog);
		}
		result = "/ModifyLog/create";
		return result;
	}

//	@PostMapping("/save")
//	public String save(@Valid @ModelAttribute("modifyLog") ModifyLog modifyLog,
//			Model model, final RedirectAttributes redirectAttributes, HttpServletRequest request) throws Exception {
//		String result;
//
//		CResponse response = null;
//		CResponseDTO responseDTO = null;
//		response = modifyLogService.save(modifyLog);
//		responseDTO = new CResponseDTO();
//		responseDTO.setSuccess(response.isSuccess());
//		if (response.isSuccess()) {
//			responseDTO.setSuccessMessage(response.getSuccessMessage());
//		} else {
//			responseDTO.setErrorMessage(response.getErrorMessage());
//		}
//		redirectAttributes.addFlashAttribute("response", responseDTO);
//		result = "redirect:/ModifyLog/index";
//		return result;
//	}

	@GetMapping("/details")
	public String details(@RequestParam(value = "id", required = true) Long id, Model model,
			final RedirectAttributes redirectAttributes) {
		String result;
		CResponse response = new CResponse();
		response = modifyLogService.findById(id);
		ModifyLog modifyLog =  (ModifyLog) response.getReturnedObject();
		System.err.println(modifyLog.getOldObject());
		model.addAttribute("modifyLog", modifyLog);
		result = "/SystemLog/detailsModifyLog";
		return result;
	}

}
