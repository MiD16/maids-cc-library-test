package com.template.Model.Basic.SystemLog;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.springframework.format.annotation.DateTimeFormat;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.template.Model.Basic.User;

import lombok.AccessLevel;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Entity
@Table(name = "Exception_Log_Action")
@Getter(AccessLevel.PUBLIC)
@Setter(AccessLevel.PUBLIC)
@NoArgsConstructor
@ToString
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
public class ExceptionLogAction {
	
	@Id
	@Column(name="ID")
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private Long id ;
	
	@ManyToOne(optional = true)
    @JoinColumn(name = "user_id",unique=false, referencedColumnName = "ID")
	private User user ;
	
	@DateTimeFormat(pattern="dd/MM/yyyy")
	@Column(name = "action_date")
	private Date action_date;
	
	@Column(name = "type")
	private String type ;
	
	@Column(name = "description")
	private String description ;
	
	@Column(name = "SOURCE")
	private Long source;
	
	@Column(name = "LINE_NUMBER")
	private int lineNumber;
	
	@Column(name = "FUNCTOIN_NAME")
	private String functionName;

	@Column(name = "CLASS_NAME")
	private String className;
	

	public ExceptionLogAction( User user, Date action_date, String type, String description,int lineNumber,String functionName,String className) {
		super();
		
		this.user = user;
		this.action_date = action_date;
		this.type = type;
		this.description = description.replace("\"", " ").replace("'", " ");
		this.lineNumber=lineNumber;
		this.functionName=functionName;
		this.className=className;
	}





}
