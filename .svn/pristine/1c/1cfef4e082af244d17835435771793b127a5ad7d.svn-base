package com.template.BusinessRule.IndSignatureType;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Component;

import com.Base.Class.CActionValidationParameters;
import com.Base.Class.CActionValidationResult;
import com.Base.Interface.IBusinessRule;
import com.template.BusinessRule.CBusinessRuleConstant;
import com.template.Enum.EErrorCode;
import com.template.Enum.EKeyCode;
import com.template.Model.Table.AllIndexes.IndSignatureType;
import com.template.Model.Table.AllIndexes.IndSocialStatus;
import com.template.Service.Table.AllIndexes.IndSignatureTypeServices;
import com.template.Service.Table.AllIndexes.IndSocialStatusServices;










@Component(CBusinessRuleConstant.IND_SIGNATURE_TYPE_IS_NOT_EXIST)



public class CBRIndSignatureTypeIsNotExist implements IBusinessRule{
	@Autowired
	IndSignatureTypeServices indSignatureTypeService;
	
	public CBRIndSignatureTypeIsNotExist()
	{
		
	}
	
	
	public CActionValidationResult validate(CActionValidationParameters parameters) {
		CActionValidationResult indSignatureTypeValidationResult = null;
		IndSignatureType indSignatureType = null;
		IndSignatureType indSignatureTypeName = null;
		long indSignatureTypeDetails;
		//long idSubpoenaRequestDetailsBySubpoenaRequest;
		String path = null;
		try {
			do {
				indSignatureTypeValidationResult = new CActionValidationResult();
				
				indSignatureType = (IndSignatureType) parameters.getParameter(EKeyCode.IND_SIGNATURE_TYPE.toString());
				path = (String) parameters.getParameter(EKeyCode.PATH.toString());
				indSignatureTypeName = indSignatureTypeService.findByNames(indSignatureType.getNameA(), indSignatureType.getNameB());
				
				if (indSignatureTypeName != null) {
			
					if (indSignatureType.getId() == null || (indSignatureType.getId() != null && indSignatureType.getId()!=indSignatureTypeName.getId())) {
						String messageString = "<div style='margin-bottom: 12px'>" + indSignatureTypeName.getNameA()
						+ " تم إضافتها مسبقاً ! الرجاء التعديل على الموجود مسبقاً"
						+ "</div> <a class='alert-url' href='" +path + "/indHolidays/create?id="
						+ indSignatureTypeName.getId() + "' >إذا كنت ترغب بالتعديل يمكنك الذهاب </a>";			
						indSignatureTypeValidationResult.setValid(false);
						indSignatureTypeValidationResult.setErrorMessage(messageString);
						indSignatureTypeValidationResult.setErrorCode(EErrorCode.IND_SECTOR_TYPE_IS_DELETED.toString());
					}
				}

			} while (false);
		} catch (Exception e) {
			throw new RuntimeException(e.getMessage());
		}

		return indSignatureTypeValidationResult;
	}

	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
}

