package com.template.Service.Table.AllIndexes;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.Base.Class.CActionHandler;
import com.Base.Class.CActionValidationParameters;
import com.Base.Class.CActionValidationResult;
import com.Base.Class.CResponse;
import com.template.Action.CActionConstant;
import com.template.Enum.EKeyCode;
import com.template.Exception.NoDataFoundException;
import com.template.Model.Table.AllIndexes.*;
import com.template.Repository.Table.AllIndexes.IndCompanyTypeRepository;


@Service
public class IndCompanyTypeServices {


	
	@Autowired
	IndCompanyTypeRepository indCompanyTypeRepository;
	
@Autowired CActionHandler actionHandler;
	
	public CResponse createIndCompanyType(IndCompanyType indCompanyType) 
	{
		CResponse response = null;
		CActionValidationParameters actionValidationParameters = null;
		CActionValidationResult actionValidationResult = null;
		
		do
		{
			response = new CResponse();
			actionValidationParameters = new CActionValidationParameters();
			
			actionValidationParameters.addParameter(EKeyCode.Ind_Company_Type.toString(), indCompanyType);
			
			actionValidationResult = actionHandler.validate(CActionConstant.CREATE_Ind_Company_Type, actionValidationParameters);
			
			if(!actionValidationResult.isValid())
			{
				response.setSuccess(false);
				response.setErrorMessage(actionValidationResult.getErrorMessage());
				break;
			}
			
			indCompanyType.setInsertBy(0);
			indCompanyType.setIsDeleted(0);
			indCompanyType.setInsertDate(new Date());
			indCompanyTypeRepository.save(indCompanyType);
			
			response.setReturnedObject(indCompanyType);
		}
		while(false);
		
		return response;
	}
	
	public IndCompanyType updateIndCompanyType (IndCompanyType indCompanyType) 
	{
		CResponse response = null;
		CActionValidationParameters actionValidationParameters = null;
		CActionValidationResult actionValidationResult = null;
		
		response = new CResponse();
		actionValidationParameters = new CActionValidationParameters();
		actionValidationResult = new CActionValidationResult();
		
		if(indCompanyType.getId() == null) 
		{
			
			indCompanyType.setInsertBy(0);
		}
		
		
		
		else if(indCompanyType.getId() != null)
		{
			IndCompanyType temSocialStatus = indCompanyTypeRepository.findById(indCompanyType.getId()).get();
			indCompanyType.setInsertDate(temSocialStatus.getInsertDate());
		}
		indCompanyTypeRepository.save(indCompanyType);
		return indCompanyType;
	
	
	
	
	}
	
	
	public IndCompanyType save(IndCompanyType indCompanyType) {
		if(indCompanyType.getId() == null)
		{
			indCompanyType.setInsertBy(0);
		}else if(indCompanyType.getId() != null){
			IndCompanyType temSignatureType=indCompanyTypeRepository.findById(indCompanyType.getId()).get();
			indCompanyType.setInsertDate(temSignatureType.getInsertDate());
		}
		indCompanyTypeRepository.save(indCompanyType);
		return indCompanyType;
	}
	
	
	
	
	
	public IndCompanyType findByNames(String nameA, String nameB) {
		return indCompanyTypeRepository.findByNames(nameA, nameB);
	}
	
	
	
	public IndCompanyType findById(Long id) {
		return indCompanyTypeRepository.getById(id);
	}
	
	public List<IndCompanyType> getAll(){
		List<IndCompanyType> all = indCompanyTypeRepository.getAll();
		return all;
	}
	
	public List<IndCompanyType> getAllDeleted(){
		List<IndCompanyType> allDeleted = indCompanyTypeRepository.getAllDeleted();
		return allDeleted;
	}

	public IndCompanyType delete(Long id) {
		IndCompanyType indCompanyType = indCompanyTypeRepository.findById(id).get();
		if (indCompanyType == null) {
			throw new NoDataFoundException("indCompanyType With ID : " + id + " Not Found");
		}
		indCompanyType.setIsDeleted(1);
		return indCompanyTypeRepository.save(indCompanyType);
	}
	
	private static java.sql.Date getCurrentDate() {
		java.util.Date today = new java.util.Date();
		return new java.sql.Date(today.getTime());
	}}