package com.template.Controller.Basic.SystemLog;

import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;
import com.Base.Class.CResponse;
import com.Base.DTO.CResponseDTO;
import com.template.Class.ClassesForm.OperationForm;
import com.template.Class.Pageing.PageInfo;
import com.template.Model.Basic.SystemLog.Commandar;
import com.template.Service.Basic.SystemLog.CommandarService;

import oracle.net.aso.p;

@Controller
@RequestMapping("Commandar")
public class CommandarController {

	@Value("${page.size}")
	int itemCountInPage;

	@Autowired
	CommandarService commandarService;

	@GetMapping("/index")
	public String index(Model model, final RedirectAttributes redirectAttributes,
			@RequestParam(name = "page", required = false) Integer page) {
		String result;
		CResponse response = new CResponse();
		if (page == null)
			page = 0;
		// get list of interests
		response = commandarService.getAllCommandar(PageRequest.of(page, itemCountInPage));
		Page<Commandar> commandersList = (Page<Commandar>) response.getReturnedObject();
		model.addAttribute("commandersList", commandersList.getContent());
		model.addAttribute("pageInfo", PageInfo.getPageInfo(commandersList));
		result = "/Commandar/index";
		return result;
	}

	@GetMapping("/create")
	public String create(Model model, @RequestParam(name = "page", required = false) Integer page,
			final RedirectAttributes redirectAttributes) {
		String result;
		OperationForm operationForm = new OperationForm();

		long commandarSize = 0;

		CResponse response = new CResponse();
		if (page == null)
			page = 0;
		// get list of interests
		response = commandarService.getAllCommandar(PageRequest.of(page, itemCountInPage));
		Page<Commandar> commandersList = (Page<Commandar>) response.getReturnedObject();

		if (commandersList.getContent().size() > 0)
			commandarSize = commandersList.getContent().size();

		model.addAttribute("commandarSize", commandarSize);
		model.addAttribute("operationForm", operationForm);
		model.addAttribute("commandersList", commandersList.getContent());

		result = "/Commandar/create";
		return result;
	}

	@PostMapping("/save")
	public String saveCreate(@Valid @ModelAttribute("operationForm") OperationForm operationForm, Model model,
			final RedirectAttributes redirectAttributes, HttpServletRequest request) throws Exception {
		String result;
		CResponse response = null;
		CResponseDTO responseDTO = null;
		// save in database
		response = commandarService.save(operationForm.getCommandars());
		// get result
		responseDTO = new CResponseDTO();
		responseDTO.setSuccess(response.isSuccess());
		if (response.isSuccess()) {
			responseDTO.setSuccessMessage(response.getSuccessMessage());
		} else {
			responseDTO.setErrorMessage(response.getErrorMessage());
		}
		redirectAttributes.addFlashAttribute("response", responseDTO);
		result = "redirect:/SystemLog/index";
		return result;
	}

}
