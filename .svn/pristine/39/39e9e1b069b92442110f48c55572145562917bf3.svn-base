package com.template.Repository.Table.Product;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;
import java.util.List;

import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Repository;

import com.template.Model.Table.Products.AccountType;

@Repository
public interface AccountTypeRepository extends JpaRepository <AccountType, Long> {
	
	@Query("Select a from AccountType a where a.isDeleted = 0 order by a.id desc")
	public Page<AccountType> getAllAsPage(Pageable pageRequest);
	
	@Query("Select a from AccountType a where a.isDeleted = 0")
	public List<AccountType> getAll();
	
	@Query("Select a From AccountType a WHERE a.isDeleted = 1 order by a.id desc")
	public List<AccountType> getAllDeleted();
	
	/*@Query("Select a From AccountType a WHERE a.accTypeCode = accTypeCode")
	public boolean isNotExist(String code);*/
	
	@Query("SELECT CASE WHEN COUNT(a) > 0 THEN true ELSE false END FROM AccountType a WHERE a.accTypeCode = :code")
	public boolean isExist(@Param("code") String code);
	
	@Query("Select a From AccountType a WHERE a.isDeleted = 0  and a.accTypeCode = :code")
	public AccountType findeByCode(@Param("code") String code);



}
