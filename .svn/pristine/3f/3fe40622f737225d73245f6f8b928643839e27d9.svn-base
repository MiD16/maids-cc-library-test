package com.template.Service.Table.AllIndexes;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.PageRequest;
import org.springframework.stereotype.Service;

import com.Base.Class.CResponse;
import com.Base.Class.CActionHandler;
import com.Base.Class.CActionValidationParameters;
import com.Base.Class.CActionValidationResult;
import com.Base.Class.CResponse;
import com.template.Action.CActionConstant;
import com.template.Enum.EKeyCode;
import com.template.Exception.NoDataFoundException;
import com.template.Model.Table.AllIndexes.AccIndInterestType;
import com.template.Model.Table.Interests.AccInterest;
import com.template.Model.Table.AllIndexes.AccIndPassBookStatus;
import com.template.Repository.Table.AllIndexes.AccIndInterestTypeRepository;

@Service
public class AccIndInterestTypeService {
	
	@Autowired
	AccIndInterestTypeRepository accIndInterestTypeRepository;
	
	public CResponse findAllIndInterestType() {
		CResponse response = new CResponse();
		response.setReturnedObject(accIndInterestTypeRepository.getAll());
		return response;
	}
	
	
	

	
	@Autowired CActionHandler actionHandler;

	
	
	


	
	public CResponse createAccIndInterestType( AccIndInterestType accIndInterestType) 
	{
		CResponse response = null;
		CActionValidationParameters actionValidationParameters = null;
		CActionValidationResult actionValidationResult = null;
		
		do
		{
			response = new CResponse();
			actionValidationParameters = new CActionValidationParameters();
			
			actionValidationParameters.addParameter(EKeyCode.Acc_Ind_Interest_Type.toString(), accIndInterestType);
			
			actionValidationResult = actionHandler.validate(CActionConstant.CREATE_Acc_Ind_Interest_Type, actionValidationParameters);
			
			if(!actionValidationResult.isValid())
			{
				response.setSuccess(false);
				response.setErrorMessage(actionValidationResult.getErrorMessage());
				break;
			}
			
			accIndInterestType.setInsertBy(0);
			accIndInterestType.setIsDeleted(0);
			accIndInterestType.setInsertDate(new Date());
			accIndInterestTypeRepository.save(accIndInterestType);
			
			response.setReturnedObject(accIndInterestType);
		}
		while(false);
		
		return response;
	}
	
	public  AccIndInterestType updateAccIndInterestType ( AccIndInterestType accIndInterestType) 
	{
		CResponse response = null;
		CActionValidationParameters actionValidationParameters = null;
		CActionValidationResult actionValidationResult = null;
		
		response = new CResponse();
		actionValidationParameters = new CActionValidationParameters();
		actionValidationResult = new CActionValidationResult();
		
		if(accIndInterestType.getId() == null) 
		{
			
			accIndInterestType.setInsertBy(0);
		}
		
		
		
		else if(accIndInterestType.getId() != null)
		{
			AccIndInterestType temSocialStatus = accIndInterestTypeRepository.findById(accIndInterestType.getId()).get();
			accIndInterestType.setInsertDate(temSocialStatus.getInsertDate());
		}
		accIndInterestTypeRepository.save(accIndInterestType);
		return accIndInterestType;
	
	
	
	
	}
	
	
	
	
	
	
	
	
	public  AccIndInterestType findByNames(String nameA, String nameB) {
		return accIndInterestTypeRepository.findByNames(nameA, nameB);
	}
	
	
	
	
	
	
	
	
	
	
	
	
	public AccIndInterestType save(AccIndInterestType accIndInterestType) {
		if(accIndInterestType.getId() == null)
		{
			accIndInterestType.setInsertBy(0);
		}else if(accIndInterestType.getId() != null){
			AccIndInterestType temCompany=accIndInterestTypeRepository.findById(accIndInterestType.getId()).get();
			accIndInterestType.setInsertDate(temCompany.getInsertDate());
		}
		accIndInterestTypeRepository.save(accIndInterestType);
		return accIndInterestType;
	}
	
	public void update(AccIndInterestType accIndInterestType) {
		accIndInterestTypeRepository.save(accIndInterestType);
	}
	
	public AccIndInterestType findById(Long id) {
		return accIndInterestTypeRepository.getById(id);
	}
	
//	public List<AccIndInterestType> getAll(){
//		List<AccIndInterestType> all = accIndInterestTypeRepository.getAll();
//		return all;
//	}
//	
//	

	
	public List<AccIndInterestType> getAllDeleted(){
		List<AccIndInterestType> allDeleted = accIndInterestTypeRepository.getAllDeleted();
		return allDeleted;
	}

	public AccIndInterestType delete(Long id) {
		AccIndInterestType accIndInterestType = accIndInterestTypeRepository.findById(id).get();
		if (accIndInterestType == null) {
			throw new NoDataFoundException("accIndInterestType With ID : " + id + " Not Found");
		}
		accIndInterestType.setIsDeleted(1);
		return accIndInterestTypeRepository.save(accIndInterestType);
	}
	
	private static java.sql.Date getCurrentDate() {
		java.util.Date today = new java.util.Date();
		return new java.sql.Date(today.getTime());
	}
	
	
	//check if Interest Type is deleted
	//return true if deleted
	//return false if not deleted
	public boolean checkIndInterestTypeIsDeleted(long id) {
		AccIndInterestType accIndInterestType= accIndInterestTypeRepository.findById(id).get();
		if (accIndInterestType.getIsDeleted() == 1)
			return true;
		return false;
	}
}
