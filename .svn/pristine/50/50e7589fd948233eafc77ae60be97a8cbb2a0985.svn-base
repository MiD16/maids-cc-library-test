package com.template.Service.Table.AllIndexes;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.Base.Class.CActionHandler;
import com.Base.Class.CActionValidationParameters;
import com.Base.Class.CActionValidationResult;
import com.Base.Class.CResponse;
import com.template.Action.CActionConstant;
import com.template.Enum.EKeyCode;
import com.template.Exception.NoDataFoundException;
import com.template.Model.Table.AllIndexes.AccIndInterestType;
import com.template.Model.Table.AllIndexes.IndJournalStatus;
import com.template.Model.Table.AllIndexes.IndPosition;
import com.template.Repository.Table.AllIndexes.IndJournalStatusRepository;
import com.template.Repository.Table.AllIndexes.IndPositionRepository;

@Service



public class IndJournalStatusServices {
	

@Autowired
IndJournalStatusRepository indJournalStatusRepository;
@Autowired CActionHandler actionHandler;


public CResponse createIndJournalStatus(IndJournalStatus indJournalStatus) 
{
	CResponse response = null;
	CActionValidationParameters actionValidationParameters = null;
	CActionValidationResult actionValidationResult = null;
	
	do
	{
		response = new CResponse();
		actionValidationParameters = new CActionValidationParameters();
		
		actionValidationParameters.addParameter(EKeyCode.IND_JOURNAL_STATUS.toString(), indJournalStatus);
		
		actionValidationResult = actionHandler.validate(CActionConstant.CREATE_IND_JOURNAL_STATUS, actionValidationParameters);
		
		if(!actionValidationResult.isValid())
		{
			response.setSuccess(false);
			response.setErrorMessage(actionValidationResult.getErrorMessage());
			break;
		}
		
		indJournalStatus.setInsertBy(0);
		indJournalStatus.setInsertDate(new Date());
		indJournalStatusRepository.save(indJournalStatus);
		
		response.setReturnedObject(indJournalStatus);
	}
	while(false);
	
	return response;
}

public IndJournalStatus updateIndJournalStatus(IndJournalStatus indJournalStatus) 
{
	CResponse response = null;
	CActionValidationParameters actionValidationParameters = null;
	CActionValidationResult actionValidationResult = null;
	
	response = new CResponse();
	actionValidationParameters = new CActionValidationParameters();
	actionValidationResult = new CActionValidationResult();
	
	if(indJournalStatus.getId() == null) 
	{
		
		indJournalStatus.setInsertBy(0);
	}
	
	
	
	else if(indJournalStatus.getId() != null)
	{
		IndJournalStatus temSocialStatus = indJournalStatusRepository.findById(indJournalStatus.getId()).get();
		indJournalStatus.setInsertDate(temSocialStatus.getInsertDate());
	}
	indJournalStatusRepository.save(indJournalStatus);
	return indJournalStatus;
}





public IndJournalStatus findByNames(String nameA, String nameB) {
	return indJournalStatusRepository.findByNames(nameA, nameB);
}

public IndJournalStatus save(IndJournalStatus indJournalStatus) {
	if(indJournalStatus.getId() == null)
	{
		indJournalStatus.setInsertBy(0);
	}else if(indJournalStatus.getId() != null){
		IndJournalStatus temSignatureType=indJournalStatusRepository.findById(indJournalStatus.getId()).get();
		indJournalStatus.setInsertDate(temSignatureType.getInsertDate());
	}
	indJournalStatusRepository.save(indJournalStatus);
	return indJournalStatus;
}


public void update(IndJournalStatus indJournalStatus) {
	indJournalStatusRepository.save(indJournalStatus);
}

public IndJournalStatus findById(Long id) {
	return indJournalStatusRepository.getById(id);
}

public List<IndJournalStatus> getAll(){
	List<IndJournalStatus> all = indJournalStatusRepository.getAll();
	return all;
}

public List<IndJournalStatus> getAllDeleted(){
	List<IndJournalStatus> allDeleted = indJournalStatusRepository.getAllDeleted();
	return allDeleted;
}

public IndJournalStatus delete(Long id) {
	IndJournalStatus indJournalStatus = indJournalStatusRepository.findById(id).get();
	if (indJournalStatus == null) {
		throw new NoDataFoundException("indSignatureType With ID : " + id + " Not Found");
	}
	indJournalStatus.setIsDeleted(1);
	return indJournalStatusRepository.save(indJournalStatus);



}

public boolean checkIndJournalStatusIsDeleted(long id) {
	IndJournalStatus indJournalStatus= indJournalStatusRepository.findById(id).get();
	if (indJournalStatus.getIsDeleted() == 1)
		return true;
	return false;
}


}
