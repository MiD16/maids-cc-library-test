package com.template.Advisor;




import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.template.Repository.Basic.UsersRep;



@Controller
public class LoginController {

	@Autowired
	public UsersRep userRep;
	@Autowired
	public com.template.Service.Basic.UserService UserService;
//	@Autowired
//	public LogService logActionService;

	


	@RequestMapping(value = "logoutuser", method = RequestMethod.GET)
	public String logout(@RequestParam(value = "param", required = false) String param ,final RedirectAttributes redirectAttributes) {
		String result;
		System.out.println("logout "+param);
		if (param != null && param.equals("error")) {
			//		logActionService.addLogAction(ActionLogName.TryToLogin.ordinal(), "");
					redirectAttributes.addAttribute("param","error");
		}
		//\//logActionService.addLogAction("logout", "");
		result = "redirect:/logout";

		return result;
	}

	
	

	
	@RequestMapping(value = "login", method = RequestMethod.GET)
	public String login(@RequestParam(value = "param", required = false) String param,@RequestParam(value = "message", required = false) String message,HttpServletRequest request,Model model) {
		String result;

			if (param != null && param.equals("error")) {
	//		logActionService.addLogAction(ActionLogName.TryToLogin.ordinal(), "");
			model.addAttribute("error","ادخل بيانات صحيحة");
			result = "login/login";

		} 
			if (message != null && message.equals("repeat")) {
				//		logActionService.addLogAction(ActionLogName.TryToLogin.ordinal(), "");
						model.addAttribute("message","يوجد مستخدم اخر قام بتسجيل الدخول مسبقاً");
						result = "login/login";

					} 
			if (param != null && param.equals("lock")) {
				//	logActionService.addLogAction(ActionLogName.TryToLogin.ordinal(), "");
						model.addAttribute("error","الحساب مقفل");
						result = "login/login";

					} 	
		else {

			result = "login/login";
		}
		
			try {
				request.logout();
			} catch (Exception e) {
				// TODO: handle exception
			}	
		return result;
	}
	
	@GetMapping("/index")
	public String viewEmployee() {
		String result;
	
		result = "/layout/home";
		return result;
	}
	
	

	
}
