package com.Base.Helper;

import java.sql.Date;
import java.util.Base64;
import java.util.Calendar;
import java.util.List;
import java.util.Random;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;


public class GeneralHelper 
{
	public static boolean isNullOrEmpty(List list)
	{
		return list == null || list.isEmpty();
	}
	
	public static boolean isNullOrEmpty(String str)
	{
		return str == null || str.isEmpty() || str.isBlank();
	}
	
	 public static String convertObjectToJson(Object object) throws JsonProcessingException 
	 {
		 String json = null;
		 
	     do
	     {
	    	 if (object == null) break;
	    	 
	        ObjectMapper mapper = new ObjectMapper();
	        json =  mapper.writeValueAsString(object);
	     }
	     while(false);
	     
	     return json;
	 }
	 
	 public static String FromBase64String(String encodedStr)
	 {
		 String decodedStr = null;
		 Base64.Decoder decoder = null;
		 byte[] bytes = null;
		 
		 try
		 {
			 decoder = Base64.getDecoder();
			 bytes = decoder.decode(encodedStr);
			 decodedStr = new String(bytes);	 
		 }
		 catch(Exception e) {}
		 
		 return decodedStr;
	 }
	 
	 public static Date getCurrentDate() 
	 {
		 return new Date(System.currentTimeMillis());
	 }
		
	 public static Date addMinutesToCurrentDate(int minutes) 
	 {	
		 Calendar calendar = null;
		 Date newDate = null;
		
		 calendar = Calendar.getInstance();
		 calendar.add(Calendar.MINUTE, minutes);
		 newDate = new Date(calendar.getTime().getTime());
		
		 return newDate;
	 }
	
	 public static String getSaltString(int stringLength) 
	 {
		String SALTCHARS = "1234567890";
		StringBuilder salt = new StringBuilder();
		Random rnd = new Random();
		while (salt.length() < stringLength) { // length of the random string.
			int index = (int) (rnd.nextFloat() * SALTCHARS.length());
			salt.append(SALTCHARS.charAt(index));
		}
		String saltStr = salt.toString();
		return saltStr;
	}
}
