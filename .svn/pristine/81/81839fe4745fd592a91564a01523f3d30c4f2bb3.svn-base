package com.Base.API.Response;

import java.util.ArrayList;
import java.util.List;

import org.springframework.http.HttpStatus;

import com.Base.API.Response.DTO.CErrorDTO;
import com.Base.Constant.CDefaultConstant;
import com.Base.Enum.ELanguage;
import com.Shared.Enum.ESuccessMessage;
import com.fasterxml.jackson.annotation.JsonInclude;

import lombok.AccessLevel;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Getter(AccessLevel.PUBLIC)
@Setter(AccessLevel.PUBLIC)
@NoArgsConstructor
public class CAPIResponse 
{
	private int statusCode;
	
	private String statusDescription;

	@JsonInclude(JsonInclude.Include.NON_DEFAULT)
	private String successMessage;
	
	@JsonInclude(JsonInclude.Include.NON_DEFAULT)
	private List<CErrorDTO> errors;
	
//	public CAPIResponse setStatus(EAPIResponseStatus status)
//	{
//		this.statusCode = status.getStatusCode();
//		this.statusDescription = status.toString();
//		
//		return this;
//	}
	
	public CAPIResponse setStatus(HttpStatus status)
	{
		this.statusCode = status.value();
		this.statusDescription = status.name();
		
		return this;
	}
	
	public CAPIResponse setSuccessMessage(ESuccessMessage message)
	{
		this.successMessage = CDefaultConstant.LANGUAGE.equals(ELanguage.AR.toString()) ? message.getArMessage() : message.getEnMessage();
		
		return this;
	}
	
	public CAPIResponse setSuccessMessage(ESuccessMessage message, ELanguage language)
	{
		this.successMessage = language.equals(ELanguage.AR) ? message.getArMessage() : message.getEnMessage();
		
		return this;
	}
	
	public CAPIResponse setSuccessMessage(String message)
	{
		this.successMessage = message;
		
		return this;
	}
	
	public void addError(CErrorDTO error)
	{
		do
		{
			if(error == null) break;
			
			if(errors == null) 
				errors = new ArrayList<CErrorDTO>();
			
			errors.add(error);
		}
		while(false);
	}
}
