package com.template.Model.Table.Commission;

import java.util.Date;
import java.util.List;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Table;

import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.NamedNativeQuery;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;
import com.template.Model.Table.AllIndexes.IndCommissionType;

import lombok.AccessLevel;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

@Entity
@Table(name = "COMMISSION")
@Getter(AccessLevel.PUBLIC)
@Setter(AccessLevel.PUBLIC)
@NoArgsConstructor
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")
@NamedNativeQuery(
        name = "SEARCH_COMMISSION", 
        callable = true, 
        query =" {? = call SEARCH_COMMISSION(?,?,?,?,?)}",
        resultClass = Commission.class)

public class Commission {

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private Long id;

	@Column(name="VALUE")
	private Integer value;

	
	@Column(name="IS_ENABLED_FLAG")
	private Integer isEnableFlag;
	
	@Column(name="ACTIVATION_FLAG")
	private Integer activationFlag;

	@Temporal(TemporalType.DATE)
	@Column(name="EFFECTIVE_FROM")
	private Date effectiveFrom;

	@Temporal(TemporalType.DATE)
	@Column(name="EFFECTIVE_TO")
	private Date effectiveTo;
	
	@Column(name="PERCENTAGE_FLAG")
	private Integer precentageFlag;

	@Column(name="DELETED_BY")
	private Integer deletedBy;
	
	@Column(name="DISABLE_BY")
	private Integer disable_by;

	@Temporal(TemporalType.DATE)
	@Column(name="DELETED_DATE")
	private Date deletedDate;

	@Column(name="INSERT_BY")
	private Integer insertBy;

	@Temporal(TemporalType.DATE)
	@Column(name="INSERT_DATE")
	private Date insertDate;

	@Column(name="IS_DELETED")
	private Integer isDeleted;


	@Column(name="LAST_UPDATE_BY")
	private Integer lastUpdateBy;

	@Temporal(TemporalType.DATE)
	@Column(name="LAST_UPDATE_DATE")
	private Date lastUpdateDate;

	@Column(name="NAME_A")
	private String nameA;

	@Column(name="NAME_B")
	private String nameB;

	private String note;

	
	@Column(name="CB_CODE")
	private String cbCode;
	
	@Transient
	private String commissionTypeName;
	
	@ManyToOne
	@JoinColumn(name="COMMISSION_TYPE_ID")
	private IndCommissionType indCommissionType;
	
	@OneToMany(mappedBy="commission")
	private List<ActionCommission> actionCommissions;
	
	@Transient
	private Integer indCommissionTypeId;

	@PrePersist
	  void createdAt() {
	    this.insertDate = this.lastUpdateDate = new Date();
	    this.isDeleted = 0;
	  }
	  
	  
	  @PreUpdate
	  protected void onUpdate() {
	    this.lastUpdateDate = new Date();
	  }
}
