package com.template.Model.Table.AllIndexes;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.PrePersist;
import javax.persistence.PreUpdate;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.annotation.JsonIdentityInfo;
import com.fasterxml.jackson.annotation.ObjectIdGenerators;

import lombok.AccessLevel;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;
import lombok.ToString;

@Entity
@Table(name="IND_ACCOUNT_RELATION")
@Getter(AccessLevel.PUBLIC)
@Setter(AccessLevel.PUBLIC)
@ToString
@NoArgsConstructor
@JsonIdentityInfo(generator = ObjectIdGenerators.PropertyGenerator.class, property = "id")




public class IndAccountRelation {
	
	

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	private Long id;

	@Column(name="NAME_A")
	private String nameA;

	@Column(name="NAME_B")
	private String nameB;
	
	@Column(name="IS_ENABLED_FLAG")
	private Integer isEnabledFlag;
	
	@Column(name="INSERT_BY")
	private Integer insertBy;

	@Temporal(TemporalType.DATE)
	@Column(name="INSERT_DATE")
	private Date insertDate;
	
	

	@Column(name="LAST_UPDATE_BY")
	private Integer lastUpdateBy;

	@Temporal(TemporalType.DATE)
	@Column(name="LAST_UPDATE_DATE")
	private Date lastUpdateDate;

	@Column(name="DELETED_BY")
	private Integer deletedBy;

	@Temporal(TemporalType.DATE)
	@Column(name="DELETED_DATE")
	private Date deletedDate;

	@Column(name="IS_DELETED")
	private Integer isDeleted;
	
	@Column(name="CB_CODE")
	private String cbCode;
	
	
	@Column(name="PLACE_ORDER")
	private Integer placeOrder;
	
	private String note;
	

	
	@PrePersist
	  void createdAt() {
	    this.insertDate = this.lastUpdateDate = new Date();
	    this.isDeleted = 0;
	  }
	  
	  @PreUpdate
	  protected void onUpdate() {
	    this.lastUpdateDate = new Date();
	  }

	
	


}
