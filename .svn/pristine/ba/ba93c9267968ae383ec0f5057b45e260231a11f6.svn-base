package com.template.Controller.Table.Interset;
import javax.servlet.http.HttpServletRequest;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;
import com.Base.Class.CResponse;
import com.Base.DTO.CResponseDTO;
import com.template.Class.Pageing.PageInfo;
import com.template.Model.Table.Interests.AccInterestRate;
import com.template.Model.Table.Interests.AccInterestRateSegments;
import com.template.Model.Table.Interests.CurrencySegments;
import com.template.Service.Table.Interest.CurrencySegmentsService;
import com.template.Service.Table.Interest.InterestRateSegmentsService;
import com.template.Service.Table.Interest.InterestRateService;
@Controller
@RequestMapping("interestRateSegment")
public class InterestRateSegmentController {

	@Value("${page.size}")
	int itemCountInPage;

	@Autowired
	InterestRateSegmentsService interestRateSegmentsService;
	
	@Autowired
	CurrencySegmentsService currencySegmentsService;
	
	@Autowired
	InterestRateService interestRateService;
	
	
	@GetMapping("/index")
	public String index(Model model, final RedirectAttributes redirectAttributes,
			@RequestParam(name = "page", required = false) Integer page) {
		String result;
		CResponse response = new CResponse();
		if (page == null)
			page = 0;
		//get list of interest rate segments
		response = interestRateSegmentsService.findAllInterestRateSegments(PageRequest.of(page, itemCountInPage));
		Page<AccInterestRateSegments> interestRateSegmentsList = (Page<AccInterestRateSegments>) response.getReturnedObject();
		//add to model
		model.addAttribute("interestRateSegmentsList", interestRateSegmentsList.getContent());
		model.addAttribute("pageInfo", PageInfo.getPageInfo(interestRateSegmentsList));
		result = "/interest-rate-segment/index";
		return result;
	}

	@GetMapping("/create")
	public String create(Model model,
			final RedirectAttributes redirectAttributes) {
		String result;
		CResponse response = null;
		AccInterestRateSegments interestRateSegment=null;
		Page<CurrencySegments> currencySegmentsList=null;
		Page<AccInterestRate> interestRateList=null;
		//init object
		interestRateSegment= new AccInterestRateSegments();
		//get list of interest rate
		response=interestRateService.findAllInterestRate(null);
		interestRateList = (Page<AccInterestRate>) response.getReturnedObject();
		//get list of currency segments
		response=currencySegmentsService.findAllCurrencySegments(null);
		currencySegmentsList =(Page<CurrencySegments>) response.getReturnedObject();
		//add to model
		model.addAttribute("interestRateList", interestRateList.getContent());
		model.addAttribute("currencySegmentsList", currencySegmentsList.getContent());
		model.addAttribute("interestRateSegment", interestRateSegment);
		result = "/interest-rate-segment/create";
		return result;
	}
	
	
	@GetMapping("/update")
	public String update(@RequestParam(value = "id", required = false) Long id, Model model,
			final RedirectAttributes redirectAttributes) {
		String result;
		CResponse response = null;
		AccInterestRateSegments interestRateSegment=null;
		Page<CurrencySegments> currencySegmentsList=null;
		Page<AccInterestRate> interestRateList=null;
		//get object from database
		response=interestRateSegmentsService.findById(id);
		interestRateSegment=(AccInterestRateSegments) response.getReturnedObject();
		//get list of interest rate
		response=interestRateService.findAllInterestRate(null);
		interestRateList = (Page<AccInterestRate>) response.getReturnedObject();
		//get list of currency segments
		response=currencySegmentsService.findAllCurrencySegments(null);
		currencySegmentsList =(Page<CurrencySegments>) response.getReturnedObject();
		//add to model
		model.addAttribute("interestRateList", interestRateList.getContent());
		model.addAttribute("currencySegmentsList", currencySegmentsList.getContent());
		model.addAttribute("interestRateSegment", interestRateSegment);
		result = "/interest-rate-segment/create";
		return result;
	}

	@PostMapping("/create/save")
	public String saveCreate(@Valid @ModelAttribute("interestRateSegment") AccInterestRateSegments interestRateSegment,
			Model model, final RedirectAttributes redirectAttributes, HttpServletRequest request) throws Exception {
		String result;
		CResponse response = null;
		CResponseDTO responseDTO = null;
		//save in database
		response = interestRateSegmentsService.saveCreate(interestRateSegment, request.getContextPath());
		responseDTO = new CResponseDTO();
		//get result
		responseDTO.setSuccess(response.isSuccess());
		if (response.isSuccess()) {
			responseDTO.setSuccessMessage(response.getSuccessMessage());
		} else {
			responseDTO.setErrorMessage(response.getErrorMessage());
		}
		redirectAttributes.addFlashAttribute("response", responseDTO);
		result = "redirect:/interestRateSegment/index";
		return result;
	}
	
	@PostMapping("/update/save")
	public String saveUpdate(@Valid @ModelAttribute("interestRateSegment") AccInterestRateSegments interestRateSegment,
			Model model, final RedirectAttributes redirectAttributes, HttpServletRequest request) throws Exception {
		String result;
		CResponse response = null;
		CResponseDTO responseDTO = null;
		//save in database
		response = interestRateSegmentsService.saveUpdate(interestRateSegment, request.getContextPath());
		responseDTO = new CResponseDTO();
		//get result
		responseDTO.setSuccess(response.isSuccess());
		if (response.isSuccess()) {
			responseDTO.setSuccessMessage(response.getSuccessMessage());
		} else {
			responseDTO.setErrorMessage(response.getErrorMessage());
		}
		redirectAttributes.addFlashAttribute("response", responseDTO);
		result = "redirect:/interestRateSegment/index";
		return result;
	}
	@GetMapping("/details")
	public String details(@RequestParam(value = "id", required = true) Long id, Model model,
			final RedirectAttributes redirectAttributes) {
		String result;
		CResponse response = new CResponse();
		//get interest rate segment from database
		response = interestRateSegmentsService.findById(id);
		AccInterestRateSegments interestRateSegment= (AccInterestRateSegments) response.getReturnedObject();
		//add to model
		model.addAttribute("interestRateSegment", interestRateSegment);
		result = "/interest-rate-segment/details";
		return result;
	}

	@GetMapping("/delete")
	public String delete(@RequestParam(value = "id", required = true) Long id, Model model,
			final RedirectAttributes redirectAttributes) {
		String result;
		CResponse response = new CResponse();
		//get interest rate segment from database
		response = interestRateSegmentsService.findById(id);
		AccInterestRateSegments interestRateSegment= (AccInterestRateSegments) response.getReturnedObject();
		//add to model
		model.addAttribute("interestRateSegment", interestRateSegment);
		result = "/interest-rate-segment/delete";
		return result;
	}

	@GetMapping("/save/delete")
	public String saveDelete(@RequestParam(value = "id", required = true) Long id, Model model,
			final RedirectAttributes redirectAttributes) throws Exception {
		String result;
		CResponse response = null;
		CResponseDTO responseDTO = null;
		//save in database
		response = interestRateSegmentsService.delete(id);
		responseDTO = new CResponseDTO();
		//get result
		responseDTO.setSuccess(response.isSuccess());
		if (response.isSuccess()) {
			responseDTO.setSuccessMessage(response.getSuccessMessage());
		} else {
			responseDTO.setErrorMessage(response.getErrorMessage());
		}
		redirectAttributes.addFlashAttribute("response", responseDTO);
		result = "redirect:/interestRateSegment/index";
		return result;
	}

}
