package com.template.BusinessRule.InterestRate;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Lazy;
import org.springframework.stereotype.Component;
import com.Base.Class.CActionValidationParameters;
import com.Base.Class.CActionValidationResult;
import com.Base.Interface.IBusinessRule;
import com.template.BusinessRule.CBusinessRuleConstant;
import com.template.Enum.EErrorCode;
import com.template.Enum.EKeyCode;
import com.template.Model.Table.Interests.AccInterestRate;
import com.template.Service.Table.Interest.InterestRateService;
@Component(CBusinessRuleConstant.INTEREST_RATE_IS_NOT_CONFLICTED)
@Lazy
public class CBRInterestRateIsNotConflicted implements IBusinessRule {
	@Autowired
	InterestRateService interestRateService;
	public CActionValidationResult validate(CActionValidationParameters parameters) {
		CActionValidationResult actionValidationResult = null;
		AccInterestRate interestRate = null;
		try {
			do {
				actionValidationResult = new CActionValidationResult();
				interestRate= (AccInterestRate) parameters.getParameter(EKeyCode.INTEREST_RATE.toString());
				if (interestRateService.checkInterestRateIsConflicted(interestRate)) {		
						actionValidationResult.setValid(false);
						actionValidationResult.setErrorMessage("تاريخ تطبيق نسبة الفائدة يتعارض مع تاريخ تطبيق نسبة فائدة موجودة");
						actionValidationResult.setErrorCode(EErrorCode.INTEREST_RATE_IS_CONFLICTED.toString());
				}

			} while (false);
		} catch (Exception e) {
			throw new RuntimeException(e.getMessage());
		}
		return actionValidationResult;
	}
}
