package com.template.Service.Table.AllIndexes;

import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.Base.Class.CActionHandler;
import com.Base.Class.CActionValidationParameters;
import com.Base.Class.CActionValidationResult;
import com.Base.Class.CResponse;
import com.template.Action.CActionConstant;
import com.template.Enum.EKeyCode;
import com.template.Exception.NoDataFoundException;
import com.template.Model.Table.AllIndexes.*;

import com.template.Repository.Table.AllIndexes.IndEconmicActivityRepository;
import com.template.Repository.Table.AllIndexes.IndSignatureTypeRepository;
@Service
public class IndEconmicActivityServices {

	@Autowired
	IndEconmicActivityRepository  indEconmicActivityRepository;
	
@Autowired CActionHandler actionHandler;
	
	public CResponse createIndSignatureType(IndEconmicActivity indEconmicActivity) 
	{
		CResponse response = null;
		CActionValidationParameters actionValidationParameters = null;
		CActionValidationResult actionValidationResult = null;
		
		do
		{
			response = new CResponse();
			actionValidationParameters = new CActionValidationParameters();
			
			actionValidationParameters.addParameter(EKeyCode.Ind_Econmic_Activity.toString(), indEconmicActivity);
			
			actionValidationResult = actionHandler.validate(CActionConstant.CREATE_Ind_Econmic_Activity, actionValidationParameters);
			
			if(!actionValidationResult.isValid())
			{
				response.setSuccess(false);
				response.setErrorMessage(actionValidationResult.getErrorMessage());
				break;
			}
			
			indEconmicActivity.setInsertBy(0);
			indEconmicActivity.setIsDeleted(0);
			indEconmicActivity.setInsertDate(new Date());
			indEconmicActivityRepository.save(indEconmicActivity);
			
			response.setReturnedObject(indEconmicActivity);
		}
		while(false);
		
		return response;
	}
	
	public IndEconmicActivity updateSocialStatus(IndEconmicActivity indEconmicActivity) 
	{
		CResponse response = null;
		CActionValidationParameters actionValidationParameters = null;
		CActionValidationResult actionValidationResult = null;
		
		response = new CResponse();
		actionValidationParameters = new CActionValidationParameters();
		actionValidationResult = new CActionValidationResult();
		
		if(indEconmicActivity.getId() == null) 
		{
			
			indEconmicActivity.setInsertBy(0);
		}
		
		
		

		else if(indEconmicActivity.getId() != null)
		{
			IndEconmicActivity temSocialStatus = indEconmicActivityRepository.findById(indEconmicActivity.getId()).get();
			indEconmicActivity.setInsertDate(temSocialStatus.getInsertDate());
		}
		indEconmicActivityRepository.save(indEconmicActivity);
		return indEconmicActivity;
	
	
	
	
	}

	
	
	
	

	
	
	
	
	
	
	public IndEconmicActivity findByNames(String nameA, String nameB) {
		return indEconmicActivityRepository.findByNames(nameA, nameB);
	}
	


	public IndEconmicActivity save(IndEconmicActivity indEconmicActivity) {
		if(indEconmicActivity.getId() == null)
		{
			indEconmicActivity.setInsertBy(0);
		}else if(indEconmicActivity.getId() != null){
			IndEconmicActivity temSignatureType=indEconmicActivityRepository.findById(indEconmicActivity.getId()).get();
			indEconmicActivity.setInsertDate(temSignatureType.getInsertDate());
		}
		indEconmicActivityRepository.save(indEconmicActivity);
		return indEconmicActivity;
	}

	
	public IndEconmicActivity findById(Long id) {
		return indEconmicActivityRepository.getById(id);
	}
	
	public List<IndEconmicActivity> getAll(){
		List<IndEconmicActivity> all = indEconmicActivityRepository.getAll();
		return all;
	}
	
	public List<IndEconmicActivity> getAllDeleted(){
		List<IndEconmicActivity> allDeleted = indEconmicActivityRepository.getAllDeleted();
		return allDeleted;
	}

	public IndEconmicActivity delete(Long id) {
		IndEconmicActivity indEconmicActivity = indEconmicActivityRepository.findById(id).get();
		if (indEconmicActivity == null) {
			throw new NoDataFoundException("indSocialStatus With ID : " + id + " Not Found");
		}
		indEconmicActivity.setIsDeleted(1);
		return indEconmicActivityRepository.save(indEconmicActivity);
	}
	
	private static java.sql.Date getCurrentDate() {
		java.util.Date today = new java.util.Date();
		return new java.sql.Date(today.getTime());
	}

}
