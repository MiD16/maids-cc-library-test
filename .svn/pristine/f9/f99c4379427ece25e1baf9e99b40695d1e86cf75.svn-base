package com.template.Controller.Table.Tax;
import java.util.List;
import javax.validation.Valid;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ControllerAdvice;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;
import com.Base.Class.CResponse;
import com.Base.DTO.CResponseDTO;
import com.template.Class.Pageing.PageInfo;
import com.template.Model.Basic.Action;
import com.template.Model.Basic.Role;
import com.template.Model.Basic.RoleAction;
import com.template.Model.Table.Products.AccCurrency;
import com.template.Model.Table.Tax.Tax;
import com.template.Model.View.RoleActionOpposite;
import com.template.Service.Basic.ActionService;

import com.template.Service.Basic.RoleActionService;
import com.template.Service.Basic.RoleService;
import com.template.Service.Basic.UserActionService;
import com.template.Service.Basic.UserRoleService;
import com.template.Service.Basic.UserService;
import com.template.Service.Table.Product.AccCurrencyService;
import com.template.Service.Table.Tax.TaxService;
@Controller
@RequestMapping("tax")
@ControllerAdvice(assignableTypes = { TaxController.class })
public class TaxController {
//	@Autowired
//	public LogService logActionService;
	@Autowired
	TaxService taxService;

	@Autowired
	UserService userService;
	@Autowired
	AccCurrencyService accCurrencyService;
	@Value("${page.size}")
	int itemCountInPage;


	// @PreAuthorize("hasPermission('role', 'index')")
	@GetMapping("/index")
	public String index(Model model, final RedirectAttributes redirectAttributes,
			@RequestParam(name = "page", required = false) Integer page) {
		String result = null;
		CResponse response = null;
		Page<Tax> taxPage = null;
		if (page == null)
			page = 0;
		response = new CResponse();
		response = taxService.findAllAsPage(PageRequest.of(page, itemCountInPage));
		taxPage = (Page<Tax>) response.getReturnedObject();
		model.addAttribute("taxList", taxPage.getContent());
		model.addAttribute("pageInfo", PageInfo.getPageInfo(taxPage));
		result = "/tax/index";
		return result;
	}

//	@PreAuthorize("hasPermission('role', 'create')")
	@GetMapping("/create")
	public String createTax(@RequestParam(value = "id", required = false) Long id, Model model,
			final RedirectAttributes redirectAttributes, @RequestParam(name = "page", required = false) Integer page) {
		String result = null;
		CResponse response = null;
		List<AccCurrency> accCurrency=null;
		Tax tax=new Tax();
		if (page == null)
			page = 0;
		response = new CResponse();
		if (id != null) {
			response = new CResponse();
			response = taxService.findTaxById(id);
			tax = (Tax) response.getReturnedObject();
		
		}
		response = 	accCurrencyService.getAll();
		accCurrency = (List<AccCurrency>) response.getReturnedObject();
		model.addAttribute("accCurrencyList", accCurrency);
		model.addAttribute("tax", tax);
		
		result = "/tax/create";
		return result;
	}

	@GetMapping("/details")
	public String details(@RequestParam(value = "id") Long id, Model model,
			@RequestParam(name = "page", required = false) Integer page) {
		String result = null;
		CResponse response = null;
		Tax tax = null;
		List<AccCurrency> accCurrency=null;
		if (page == null)
			page = 0;
		response = new CResponse();
		response = taxService.findTaxById(id);
		tax = (Tax) response.getReturnedObject();
		response = 	accCurrencyService.getAll();
		accCurrency = (List<AccCurrency>) response.getReturnedObject();
		model.addAttribute("accCurrencyList", accCurrency);
		model.addAttribute("tax", tax);
		result = "/tax/details";
		return result;
	}

	// @PreAuthorize("hasPermission('role', 'create')")
	@PostMapping("/save")
	public String roleSave(@Valid @ModelAttribute("tax") Tax tax, Model model,
			final RedirectAttributes redirectAttributes) throws Exception {
	
		String result=null;
		CResponse response = null;
		CResponseDTO responseDTO = null;
		response = new CResponse();
		// create
	
		if (tax.getID() == null) {
			response = taxService.createTax(tax);
			responseDTO = new CResponseDTO();
			responseDTO.setSuccess(response.isSuccess());
			if (!response.isSuccess()) {
				responseDTO.setErrorMessage(response.getErrorMessage());

				result = "redirect:/tax/create";
			} else {
				responseDTO.setSuccessMessage(response.getSuccessMessage());
				result = "redirect:/tax/index";
			}
			redirectAttributes.addFlashAttribute("response", responseDTO);
			return result;
		} else { // edit
			response = taxService.updateTax(tax);
			responseDTO = new CResponseDTO();
			responseDTO.setSuccess(response.isSuccess());
			if (!response.isSuccess()) {
				responseDTO.setErrorMessage(response.getErrorMessage());
				result = "redirect:/tax/create?id=" + tax.getID();
			} else {
				responseDTO.setSuccessMessage(response.getSuccessMessage());
				result = "redirect:/tax/index";
			}
			redirectAttributes.addFlashAttribute("response", responseDTO);
			return result;
		}
	}
//
////	@PreAuthorize("hasPermission('role', 'delete')")
	@GetMapping("/delete")
	public String delete(@RequestParam(value = "id") Long id, final RedirectAttributes redirectAttributes)
			throws Exception {
		String result=null;
		CResponse response = null;
		CResponseDTO responseDTO = null;

		// delete role
		response = taxService.deleteTax(id);
		responseDTO = new CResponseDTO();
		responseDTO.setSuccess(response.isSuccess());
		if (!response.isSuccess()) {
			responseDTO.setErrorMessage(response.getErrorMessage());
			result = "redirect:/tax/index";
		} else {
			responseDTO.setSuccessMessage(response.getSuccessMessage());
			result = "redirect:/tax/index";
		}
		redirectAttributes.addFlashAttribute("response", responseDTO);
		return result;
	}



	@ModelAttribute("title")
	public String pageTitle() {
		return "الضرائب ";
	}
}
